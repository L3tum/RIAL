use testing:print;
use rial:builtin:print;
use testing:boolean;
use rial:builtin:system;

public int main() {
    @"rial:builtin:settings:nop_function" = nop;

    @"rial:builtin:settings:nop_function"();

    var a = @"println.i8";

    a("FUNCTION TO VARIABLE ASSIGNMENT BABY");

    println(os_information.identifier);

	println("Hello world!");
	println(5+5);
	printInteger(5 < 5+5);

	if(5 < 10){
	    println(null);
	} else {
	    println("Hi");
	}

	for(var i = 0; i < 5; i++){
	    var j = 0;
	    j += i;
	    printInteger(j);
	}

	var i = 0;

	while (true){
	    print("While loop: ");
	    printInteger(i);
	    i++;

	    if (i > 5){
	        break;
	    }
	}

	loop {
	    println("Loop loop");

	    break;
	}

	printTestWrapper();

	printBoolean(true);

	//printDouble(-5.0e4);

	printInteger(50000000uL + 1uL);
	printInteger(500 + -5000);

	if(5 == 5){
	    println("HI");
	}

	if(5 < 5){
	    printBoolean(false);
	} elif(5 > 5){
	    printBoolean(false);
	} else{
	    printBoolean(true);
	}

	switch(i){
	    case 0:
	    case 1:
	    case 6:{
	        println("0");
	        println("1");
	        break;
	    }
	    default:{
	        printInteger(i);
	        println("Default");
	        break;
	    }
	}

	return 0;
}